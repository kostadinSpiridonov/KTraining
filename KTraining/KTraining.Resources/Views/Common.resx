<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Activities" xml:space="preserve">
    <value>Activities</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddLevel" xml:space="preserve">
    <value>Add a level</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="ApplyForCourse" xml:space="preserve">
    <value>Apply for course</value>
  </data>
  <data name="ChangePass" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="Check" xml:space="preserve">
    <value>Check up</value>
  </data>
  <data name="Choose" xml:space="preserve">
    <value>Choose</value>
  </data>
  <data name="ChooseFiles" xml:space="preserve">
    <value>Choose files</value>
  </data>
  <data name="ChoosePic" xml:space="preserve">
    <value>Choose picture for upload</value>
  </data>
  <data name="ChooseStudents" xml:space="preserve">
    <value>Choose students</value>
  </data>
  <data name="ChoseAll" xml:space="preserve">
    <value>Chose all</value>
  </data>
  <data name="Courses" xml:space="preserve">
    <value>Courses</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateCourse" xml:space="preserve">
    <value>Create courses with KTraining</value>
  </data>
  <data name="CreateYourProfile" xml:space="preserve">
    <value>Create your profile now.</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Decline" xml:space="preserve">
    <value>Decline</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EnterYourEmail" xml:space="preserve">
    <value>Enter your email</value>
  </data>
  <data name="Evaluation" xml:space="preserve">
    <value>Evaluation</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="ForgotPass" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HideOlder" xml:space="preserve">
    <value>Hide the older</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="ImportDet" xml:space="preserve">
    <value>Import files from a text file. Questions should be in Aiken format.</value>
  </data>
  <data name="Last" xml:space="preserve">
    <value>Last</value>
  </data>
  <data name="Leader" xml:space="preserve">
    <value>Leader</value>
  </data>
  <data name="Levels" xml:space="preserve">
    <value>Levels</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log Out</value>
  </data>
  <data name="Mark" xml:space="preserve">
    <value>Mark</value>
  </data>
  <data name="Marks" xml:space="preserve">
    <value>Marks</value>
  </data>
  <data name="Materials" xml:space="preserve">
    <value>Materials</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>Minutes</value>
  </data>
  <data name="MoreAbAiken" xml:space="preserve">
    <value>More about Aiken</value>
  </data>
  <data name="MostPopular" xml:space="preserve">
    <value>Most popular</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NotAvailable" xml:space="preserve">
    <value>Not available</value>
  </data>
  <data name="Notebook" xml:space="preserve">
    <value>Notebook</value>
  </data>
  <data name="Notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="NumOfParticipants" xml:space="preserve">
    <value>Number of participants</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="Older" xml:space="preserve">
    <value>Older</value>
  </data>
  <data name="Participants" xml:space="preserve">
    <value>Participants</value>
  </data>
  <data name="Participate" xml:space="preserve">
    <value>Participate</value>
  </data>
  <data name="Pictures" xml:space="preserve">
    <value>Pictures</value>
  </data>
  <data name="PleaseCheckYourEmail" xml:space="preserve">
    <value>Please check your email to reset your password.</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>Points</value>
  </data>
  <data name="Post" xml:space="preserve">
    <value>Post</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Searching" xml:space="preserve">
    <value>Searching</value>
  </data>
  <data name="SearchingFor" xml:space="preserve">
    <value>Searching for</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="SentRequest" xml:space="preserve">
    <value>The request is sent</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="UploadMat" xml:space="preserve">
    <value>Upload material</value>
  </data>
  <data name="UploadPicture" xml:space="preserve">
    <value>Upload a photo</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Videos" xml:space="preserve">
    <value>Videos</value>
  </data>
  <data name="WayToGo" xml:space="preserve">
    <value>WayToGo</value>
  </data>
  <data name="WriteYourPost" xml:space="preserve">
    <value>Write your post</value>
  </data>
</root>