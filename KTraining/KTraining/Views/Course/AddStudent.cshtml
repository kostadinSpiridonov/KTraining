@model KTraining.Models.AddStudentToCourseViewModel


<h4>@KTraining.Resources.Views.Course.AddParticipant</h4>
@using (Html.BeginForm("AddStudent", "CourseParticipants",FormMethod.Post)) 
{
    
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Търси", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @id="autocompleteUsers"} })
                <div class="error">
                    @TempData["AddUserError"]
                </div>
            </div>
        </div>
                @Html.HiddenFor(model => model.CourseId, new { htmlAttributes = new { @class = "form-control" } })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@KTraining.Resources.Views.Common.Add" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<link href="~/Content/Styles/Course.css" rel="stylesheet" />
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(document).ready(function () {
        var names = @Html.Raw(Model.UsernamesJson)
        $('#autocompleteUsers').autocomplete({
            autoFocus: true,
            source: names
        }).focusout(function () {
            var isValid = false;
            for (i in names) {
                if (names[i].toLowerCase().localeCompare(this.value.toLowerCase())===0) {
                    isValid = true;
                }
            }
            if (!isValid) {
                this.value = ""
            } 
        });
    });
</script>
